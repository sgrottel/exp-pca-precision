shallow_clone: true

platform:
  - x64
  - x86

configuration:
  - Debug
  - Release

image:
  - Visual Studio 2013

environment:
  matrix:
    - GLM_ARGUMENTS: -DGLM_TEST_FORCE_PURE=ON
    - GLM_ARGUMENTS: -DGLM_TEST_ENABLE_SIMD_SSE2=ON -DGLM_TEST_ENABLE_LANG_EXTENSIONS=ON
    - GLM_ARGUMENTS: -DGLM_TEST_ENABLE_SIMD_AVX=ON -DGLM_TEST_ENABLE_LANG_EXTENSIONS=ON
    - GLM_ARGUMENTS: -DGLM_TEST_ENABLE_SIMD_AVX=ON -DGLM_TEST_ENABLE_LANG_EXTENSIONS=ON -DGLM_TEST_ENABLE_CXX_14=ON
    - GLM_ARGUMENTS: -DGLM_TEST_ENABLE_SIMD_AVX=ON -DGLM_TEST_ENABLE_LANG_EXTENSIONS=ON -DGLM_TEST_ENABLE_CXX_17=ON

matrix:
    exclude:
    - image: Visual Studio 2013
      GLM_ARGUMENTS: -DGLM_TEST_ENABLE_SIMD_AVX=ON -DGLM_TEST_ENABLE_LANG_EXTENSIONS=ON
    - image: Visual Studio 2013
      GLM_ARGUMENTS: -DGLM_TEST_ENABLE_SIMD_AVX=ON -DGLM_TEST_ENABLE_LANG_EXTENSIONS=ON -DGLM_TEST_ENABLE_CXX_14=ON
    - image: Visual Studio 2013
      GLM_ARGUMENTS: -DGLM_TEST_ENABLE_SIMD_AVX=ON -DGLM_TEST_ENABLE_LANG_EXTENSIONS=ON -DGLM_TEST_ENABLE_CXX_17=ON
    - image: Visual Studio 2013
      configuration: Debug

before_build:
  - ps: |
      mkdir build
      cd build

      if ("$env:APPVEYOR_JOB_NAME" -match "Image: Visual Studio 2013") {
          $env:generator="Visual Studio 12 2013"
      } 
      if ("$env:APPVEYOR_JOB_NAME" -match "Image: Visual Studio 2015") {
          $env:generator="Visual Studio 14 2015"
      } 
      if ("$env:APPVEYOR_JOB_NAME" -match "Image: Visual Studio 2017") {
          $env:generator="Visual Studio 15 2017"
      }
      if ("$env:APPVEYOR_JOB_NAME" -match "Image: Visual Studio 2019") {
          $env:generator="Visual Studio 16 2019"
      }
      if ($env:PLATFORM -eq "x64") {
          $env:generator="$env:generator Win64"
      }
      echo generator="$env:generator"
      cmake .. -G "$env:generator" -DCMAKE_INSTALL_PREFIX="$env:APPVEYOR_BUILD_FOLDER/install" -DGLM_QUIET=ON -DGLM_TEST_ENABLE=ON "$env:GLM_ARGUMENTS"

build_script:
  - cmake --build . --parallel --config %CONFIGURATION% -- /m /v:minimal

test_script:
  - ps: |
      # gci -recurse
      $expp = (gci -recurse expp.exe)[0].FullName
      write-host $expp
      gci -recurse *.testresult | rm
      & $expp
      $testresult = (gci -recurse *.testresult)[0].FullName
      gc $testresult | foreach { $v = $_.split(';'); Add-AppveyorTest -Name $v[0] -Framework sgUnit -Filename expp.exe -Outcome $(If ($v[1] -eq "true") {"Passed"} Else {"Failed"}) -Duration 0 }

deploy: off
